To Do:
- Dodać możliwość wyboru portretu postaci

- Dodać opis pochodzenia do Origins.json

- dodać slot resetPoints() do NPCSkillsManagerWidget, używać przy zmianie bonusowych skillpontów

- poprawić literówki pliku Sickness.json

- dodać do karty zakładkę z ekwipunkiem

- dodać do karty zakładkę z formularzem postaci oraz opisami, historią itp.

- dodać metodę updateBougthTricks(), aby po zmianie wartości skilli sprawdzał czy postać może go
  jeszcze mieć

- dodać logiki specyficzne dla każdego bonusu z pochodzenia i profesji

- dodać zakładkę z wyborem znajomych oraz rozdysponowaniem gambli na nich

BUGS:
- wielokrotne wciśnięcie przycisku losuj w zakładce Choroba nie odświerza listy wylosowanych chorób,
  nie znikają wcześniej wylosowane choroby

In progress:


Done:
+ po kupieniu pakietu, minimalna możliwa wartość skilla to 1.
+ po wczytaniu tablicy atrybutów z pliku json trzymanie tablicy jest zbędne
+ po wczytaniu specjalizacji z pliku json trzymanie tablicy jest zbędne
+ przerobić loadJsonObject aby zwracała QJsonArray ?
+ przenieść modyfikatory do pliku json ?
+ sekcja Rozwój postaci pownien byś oddzielnym widgetem z własnymi zadaniami ?
    odpowiedzialny za pilnowanie ile punktów kreacji zostało
+ obecnie mamy ciąg sygnałów i slotów NPCSkillPackWidget -> NPCAttributeWudget -> NPCCard,
    a gdyby tak przenieść connecty do NPCCard wystawiając NPCSkillPackWidget-y do NPCCard
    za pomocą api ?
+ QSpinBox nie informuje o tym czy wartość została zwiększona czy zmniejszona
    Utworzyć własną klasę
+ QLienEdit z chorobą przerobić na tylko do odczytu
+ pakiet można kupić tylko wtedy gdy żadna z umiejętności w pakiecie nie została już kupiona.
+ dodać informacje o specjalizacjach przypisanych do pakietu umiejętności
+ usunąć puste pochodzenie z pliku Origins.json
+ w klasie NPCSkillPackWidget sprawić aby etykieta i line edit zajmowały:
    etykiety więcej ale tyle samo, line edit resztę dostęgo miejsca
+ Dodać informacje o stadiach choroby oraz lekach do pliku Sickness.json
+ dodać modyfikator do atrybutu z wybranego pochodzenia
+ dodać możliwość zamykania zakładek postaci, z pytaniem czy zapisać postać
+ Dodać konwersje NPCCardTab na QJsonObject
    * stworzyć klasę CardConverter
    * dodać metodę toJson()
    * dodać metodę toCard()
    * dodać metody
        + tworzące json z informacjami personalnymi bohatera
        + tworzące json z informacjami o trikach bohatera
        + tworzące json z informacjami o atrybutach bohatera
        + tworzące json z informacjami o kupionych pakietach
        + tworzące json z informacjami o wartościach skili bohatera
+ Dodanie zapisu postaci do pliku json
    * dodać metodę saveCard(), która utworzy plik z nazwą postaci
+ Dodać losowanie choroby
+ usunąć znaczniki nowej lini z Origins.json
+ okreslić rozmiar tooltipa dla cechy pochodzenia (QComboBox m_pFeature1)
+ Dodać tooltip do QLineEdit z chorobą o stadiach i lekach
+ poprawić literówki pliku Origins.json
+ NPCOriginManagerDialog powinien zwracać obiekt json
{
    "name": "origin_name",
    "attribute" {
        "name": "attribute_name",
        "value": 1
    },
    "feature": {
        "name": "feature_name",
        "description": description",
        "bonus": {
            "text": ""

            "skillpack": "",
            "value": 1,

            "attribute": "",
            "value": 1

            "specialization": "",
            "value": 1

            "trick": ""
        }
    }
}
+ Stworzyć widget wyboru specjalizacji z opisem
+ Stworzyć widget wyboru profesji wraz z cechami i bonusami
+ Stworzyć widget losowania choroby
+ Stworzyć widget do rozdzielania punktów umiejętności
+ poprawić logikę wydawania punktów (wydając specPointy uzwględniamy również skillPointy)
+ Przenieść wydawanie skill pointów do osobnego okna
    Karta postaci będzie jedynie reprezentacją liczbową.
+ Dodać specjalną logikę dla pochodzenia "Człowiek z... nie twój zasrany interes"
+ cechy z pochodzenia i profesji oferują bonusy, utworzyć info o bonusie aby łatwiej
    było cofać i aktualizować zmiany, w jsonie zrobić
    "Bonus": {
        "type": "Trick", //skill pack, skill(s)
        "name": "Trick name //skillPackName, skills array with values ?
    }
+ Dodać specjalną logikę dla cechy Wszechstronność do kwadratu
+ dodać plik Reputation.json z miejscami podziału reputacji.
+ Dodać specjalną logikę dla cechy Wszechstronność
+ Dodanie wczytania postaci z pliku json
+ stworzyć wizualizację karty postaci
+ dodać widget odpowiedzialy za reputację i sławę bohatera
+ stworzyć logikę przenoszącą dane z klasy NPCCreatorDialog do NPCCardTab
+ dodać informację o chorobie w klasie NPCSicknessManagerWidget
