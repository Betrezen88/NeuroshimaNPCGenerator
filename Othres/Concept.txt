To Do:
- Dodanie wczytania postaci z pliku json

- Dodać specjalną logikę dla pochodzenia "Człowiek z... nie twój zasrany interes"
    Osobne okno z wyborem atrybutu ?

- Dodać specjalną logikę dla cechy Wszechstronność

- Dodać losowanie choroby

- Dodać tooltip do QLineEdit z chorobą o stadiach i lekach

- cechy z pochodzenia i profesji oferują bonusy, utworzyć info o bonusie aby łatwiej
    było cofać i aktualizować zmiany, w jsonie zrobić
    "Bonus": {
        "type": "Trick", //skill pack, skill(s)
        "name": "Trick name //skillPackName, skills array with values ?
    }

- poprawić literówki ploku Origins.json

- usunąć znaczniki nowej lini z Origins.json

- okreslić rozmiar tooltipa dla pochodzenia (QComboBox m_pOrigin)

In progress:


Done:
+ po kupieniu pakietu, minimalna możliwa wartość skilla to 1.
+ po wczytaniu tablicy atrybutów z pliku json trzymanie tablicy jest zbędne
+ po wczytaniu specjalizacji z pliku json trzymanie tablicy jest zbędne
+ przerobić loadJsonObject aby zwracała QJsonArray ?
+ przenieść modyfikatory do pliku json ?
+ sekcja Rozwój postaci pownien byś oddzielnym widgetem z własnymi zadaniami ?
    odpowiedzialny za pilnowanie ile punktów kreacji zostało
+ obecnie mamy ciąg sygnałów i slotów NPCSkillPackWidget -> NPCAttributeWudget -> NPCCard,
    a gdyby tak przenieść connecty do NPCCard wystawiając NPCSkillPackWidget-y do NPCCard
    za pomocą api ?
+ QSpinBox nie informuje o tym czy wartość została zwiększona czy zmniejszona
    Utworzyć własną klasę
+ QLienEdit z chorobą przerobić na tylko do odczytu
+ pakiet można kupić tylko wtedy gdy żadna z umiejętności w pakiecie nie została już kupiona.
+ dodać informacje o specjalizacjach przypisanych do pakietu umiejętności
+ usunąć puste pochodzenie z pliku Origins.json
+ w klasie NPCSkillPackWidget sprawić aby etykieta i line edit zajmowały:
    etykiety więcej ale tyle samo, line edit resztę dostęgo miejsca
+ Dodać informacje o stadiach choroby oraz lekach do pliku Sickness.json
+ dodać modyfikator do atrybutu z wybranego pochodzenia
+ dodać możliwość zamykania zakładek postaci, z pytaniem czy zapisać postać
+ Dodać konwersje NPCCardTab na QJsonObject
    * stworzyć klasę CardConverter
    * dodać metodę toJson()
    * dodać metodę toCard()
    * dodać metody
        + tworzące json z informacjami personalnymi bohatera
        + tworzące json z informacjami o trikach bohatera
        + tworzące json z informacjami o atrybutach bohatera
        + tworzące json z informacjami o kupionych pakietach
        + tworzące json z informacjami o wartościach skili bohatera
+ Dodanie zapisu postaci do pliku json
    * dodać metodę saveCard(), która utworzy plik z nazwą postaci
