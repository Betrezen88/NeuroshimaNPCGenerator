To Do:
- Dodanie zapisu postaci do pliku json

- Dodanie wczytania postaci z pliku json

- w klasie SkillSpinBox sprawić aby etykieta i line edit zajmowały:
  1) równą ilość miejsca
  2) etykiety więcej ale tyle samo, line edit mniej

- usunąć puste pochodzenie z pliku Origins.json

- Dodać losowanie choroby

- QLienEdit z chorobą przerobić na tylko do odczytu

- Dodać informacje o stadiach choroby oraz lekach do pliku Sickness.json

- Dodać tooltip do QLineEdit z chorobą o stadiach i lekach

- pakiet można kupić tylko wtedy gdy żadna z umiejętności w pakiecie nie została już kupiona.

- cechy z pochodzenia i profesji oferują bonusy, utworzyć info o bonusie aby łatwiej
    było cofać i aktualizować zmiany, w jsonie zrobić
    "Bonus": {
        "type": "Trick", //skill pack, skill(s)
        "name": "Trick name //skillPackName, skills array with values ?
    }

Done:
+ po kupieniu pakietu, minimalna możliwa wartość skilla to 1.
+ po wczytaniu tablicy atrybutów z pliku json trzymanie tablicy jest zbędne
+ po wczytaniu specjalizacji z pliku json trzymanie tablicy jest zbędne
+ przerobić loadJsonObject aby zwracała QJsonArray ?
+ przenieść modyfikatory do pliku json ?
+ sekcja Rozwój postaci pownien byś oddzielnym widgetem z własnymi zadaniami ?
    odpowiedzialny za pilnowanie ile punktów kreacji zostało
+ obecnie mamy ciąg sygnałów i slotów NPCSkillPackWidget -> NPCAttributeWudget -> NPCCard,
    a gdyby tak przenieść connecty do NPCCard wystawiając NPCSkillPackWidget-y do NPCCard
    za pomocą api ?
+ QSpinBox nie informuje o tym czy wartość została zwiększona czy zmniejszona
    Utworzyć własną klasę
